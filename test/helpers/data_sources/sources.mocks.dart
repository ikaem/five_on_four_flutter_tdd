// Mocks generated by Mockito 5.4.0 from annotations
// in five_on_four_flutter_tdd/test/helpers/data_sources/sources.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:five_on_four_flutter_tdd/features/auth/data/data_sources/auth_local/data_source.dart'
    as _i3;
import 'package:five_on_four_flutter_tdd/features/auth/data/dtos/auth_local/dto.dart'
    as _i5;
import 'package:five_on_four_flutter_tdd/features/matches/data/data_sources/matches_remote/data_source.dart'
    as _i6;
import 'package:five_on_four_flutter_tdd/features/matches/data/dtos/match_remote/dto.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMatchRemoteDTO_0 extends _i1.SmartFake
    implements _i2.MatchRemoteDTO {
  _FakeMatchRemoteDTO_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthLocalDataSource extends _i1.Mock
    implements _i3.AuthLocalDataSource {
  MockAuthLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i5.AuthLocalDTO?> getAuth() => (super.noSuchMethod(
        Invocation.method(
          #getAuth,
          [],
        ),
        returnValue: _i4.Future<_i5.AuthLocalDTO?>.value(),
      ) as _i4.Future<_i5.AuthLocalDTO?>);
}

/// A class which mocks [MatchesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMatchesRemoteDataSource extends _i1.Mock
    implements _i6.MatchesRemoteDataSource {
  MockMatchesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i2.MatchRemoteDTO>> getPlayerJoinedMatches(
          String? playerId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPlayerJoinedMatches,
          [playerId],
        ),
        returnValue:
            _i4.Future<List<_i2.MatchRemoteDTO>>.value(<_i2.MatchRemoteDTO>[]),
      ) as _i4.Future<List<_i2.MatchRemoteDTO>>);
  @override
  _i4.Future<List<_i2.MatchRemoteDTO>> getPlayerInvitedMatches(
          String? playerId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPlayerInvitedMatches,
          [playerId],
        ),
        returnValue:
            _i4.Future<List<_i2.MatchRemoteDTO>>.value(<_i2.MatchRemoteDTO>[]),
      ) as _i4.Future<List<_i2.MatchRemoteDTO>>);
  @override
  _i4.Future<_i2.MatchRemoteDTO> getPlayerNextMatch(String? playerId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPlayerNextMatch,
          [playerId],
        ),
        returnValue: _i4.Future<_i2.MatchRemoteDTO>.value(_FakeMatchRemoteDTO_0(
          this,
          Invocation.method(
            #getPlayerNextMatch,
            [playerId],
          ),
        )),
      ) as _i4.Future<_i2.MatchRemoteDTO>);
}
